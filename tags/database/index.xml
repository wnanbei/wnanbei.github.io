<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on WNANBEI</title><link>https://wnanbei.github.io/tags/database/</link><description>Recent content in Database on WNANBEI</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://wnanbei.github.io/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB 索引用法与原理</title><link>https://wnanbei.github.io/post/mongodb-%E7%B4%A2%E5%BC%95%E7%94%A8%E6%B3%95%E4%B8%8E%E5%8E%9F%E7%90%86/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mongodb-%E7%B4%A2%E5%BC%95%E7%94%A8%E6%B3%95%E4%B8%8E%E5%8E%9F%E7%90%86/</guid><description/></item><item><title>ElasticSearch CRUD 接口</title><link>https://wnanbei.github.io/post/elasticsearch-crud-%E6%8E%A5%E5%8F%A3/</link><pubDate>Sat, 06 Nov 2021 16:17:25 +0000</pubDate><guid>https://wnanbei.github.io/post/elasticsearch-crud-%E6%8E%A5%E5%8F%A3/</guid><description>&lt;p>ElasticSearch 使用 HTTP 协议的 Restful 接口，来对接不同的程序系统。&lt;/p></description></item><item><title>MongoDB CRUD 操作</title><link>https://wnanbei.github.io/post/mongodb-crud-%E6%93%8D%E4%BD%9C/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mongodb-crud-%E6%93%8D%E4%BD%9C/</guid><description/></item><item><title>Redis 底层数据结构</title><link>https://wnanbei.github.io/post/redis-%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>&lt;p>Redis 底层所采用的数据结构，分别有：SDS String、HashTable、ZipList、QuickList、IntSet、SkipList。&lt;/p></description></item><item><title>Redis 缓存与淘汰策略</title><link>https://wnanbei.github.io/post/redis-%E7%BC%93%E5%AD%98%E4%B8%8E%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E7%BC%93%E5%AD%98%E4%B8%8E%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5/</guid><description>&lt;p>常见的缓存类型以及现实中常遇到的缓存问题，Redis 所采用的过期淘汰策略 LRU、LFU 等。&lt;/p></description></item><item><title>Redis 使用规范</title><link>https://wnanbei.github.io/post/redis-%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/</guid><description>&lt;p>Redis 使用过程中的一些规范，包括 key 的名称、禁用的命令等。&lt;/p></description></item><item><title>Redis 安装配置</title><link>https://wnanbei.github.io/post/redis-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>Redis 在 centos 系统下的安装配置流程。&lt;/p></description></item><item><title>Redis 数据持久化策略</title><link>https://wnanbei.github.io/post/redis-%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E7%AD%96%E7%95%A5/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E7%AD%96%E7%95%A5/</guid><description>&lt;p>redis 提供了两种持久化的方式，分别是 &lt;code>RDB(Redis DataBase)&lt;/code> 和 &lt;code>AOF(Append Only File)&lt;/code>。&lt;/p></description></item><item><title>Redis 数据类型</title><link>https://wnanbei.github.io/post/redis-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>&lt;p>在 Redis 中，常用的 5 种数据类型和应用场景如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>String&lt;/code>：缓存、计数器、限速器、分布式锁等。&lt;/li>
&lt;li>&lt;code>List&lt;/code>：链表、队列、微博关注人时间轴列表等。&lt;/li>
&lt;li>&lt;code>Hash&lt;/code>： 用户信息、Hash 表等。&lt;/li>
&lt;li>&lt;code>Set&lt;/code>： 去重、赞、踩、共同好友等。&lt;/li>
&lt;li>&lt;code>Sorted Set&lt;/code>：访问量排行榜、点击量排行榜等。&lt;/li>
&lt;/ul></description></item><item><title>Redis 整体架构</title><link>https://wnanbei.github.io/post/redis-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</guid><description>&lt;p>Redis 的性能、整体架构设计、单线程原因等。&lt;/p></description></item><item><title>MySQL Join 连接详解</title><link>https://wnanbei.github.io/post/mysql-join-%E8%BF%9E%E6%8E%A5%E8%AF%A6%E8%A7%A3/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-join-%E8%BF%9E%E6%8E%A5%E8%AF%A6%E8%A7%A3/</guid><description>&lt;p>在 MySQL 中，不同的 Join 语句会使用不同的算法扫描数据。&lt;/p>
&lt;p>直接使用 Join 时，MySQL 的优化器会自动选定 Join 的驱动表，如果使用 &lt;code>straight_join&lt;/code> 可以指定前表为驱动表。&lt;/p></description></item><item><title>MySQL 中的锁</title><link>https://wnanbei.github.io/post/mysql-%E4%B8%AD%E7%9A%84%E9%94%81/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E4%B8%AD%E7%9A%84%E9%94%81/</guid><description>&lt;p>根据加锁的范围，MySQL 的锁大致可以分成三类：&lt;/p>
&lt;ol>
&lt;li>全局锁&lt;/li>
&lt;li>表锁&lt;/li>
&lt;li>行锁&lt;/li>
&lt;/ol></description></item><item><title>MySQL 事务与隔离级别</title><link>https://wnanbei.github.io/post/mysql-%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</guid><description>&lt;p>事务是保证一组数据库操作，要么全部成功，要么全部失败。&lt;/p>
&lt;p>在 MySQL 中，事务支持在引擎层实现。MySQL 并不是所有的引擎都支持事务。比如 MySQL 原生的 MyISAM 引擎不支持事务，这也是 MyISAM 被 InnoDB 取代的重要原因之一。&lt;/p>
&lt;p>ACID（&lt;code>Atomicity&lt;/code>、&lt;code>Consistency&lt;/code>、&lt;code>Isolation&lt;/code>、&lt;code>Durability&lt;/code>，即原子性、一致性、隔离性、持久性）。&lt;/p></description></item><item><title>MySQL 安装与配置</title><link>https://wnanbei.github.io/post/mysql-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>&lt;code>MySQL&lt;/code> 在今年初发布了正式的 8.0 版本，据说性能相比 5.7 提升了两倍。今天我们就来安装和配置一下&lt;code>MySQL8.0&lt;/code>。&lt;/p>
&lt;p>安装环境为 &lt;code>Centos7&lt;/code>。&lt;/p>
&lt;p>MySQL 的安装主要有两种方式，一种是使用 &lt;code>yum&lt;/code> 命令在线安装，一种是下载源代码，离线安装。&lt;/p></description></item><item><title>MySQL 建表与修改</title><link>https://wnanbei.github.io/post/mysql-%E5%BB%BA%E8%A1%A8%E4%B8%8E%E4%BF%AE%E6%94%B9/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E5%BB%BA%E8%A1%A8%E4%B8%8E%E4%BF%AE%E6%94%B9/</guid><description/></item><item><title>MySQL 数据库设计规范</title><link>https://wnanbei.github.io/post/mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</guid><description>&lt;p>MySQL 数据库与 Oracle、 SQL Server 等数据库相比，有其内核上的优势与劣势。我们在使用 MySQL 数据库的时候需要遵循一定规范，扬长避短。&lt;/p>
&lt;p>本规范旨在帮助或指导 RD、QA、OP 等技术人员做出适合线上业务的数据库设计。在数据库变更和处理流程、数据库表设计、SQL 编写等方面予以规范，从而为公司业务系统稳定、健康地运行提供保障。&lt;/p></description></item><item><title>MySQL 索引详解</title><link>https://wnanbei.github.io/post/mysql-%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3/</guid><description>&lt;p>索引的出现其实就是为了提高数据查询的效率，就像书的目录一样。&lt;/p></description></item><item><title>MySQL 运算符与数据类型</title><link>https://wnanbei.github.io/post/mysql-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>&lt;p>MySQL 常用类型简单介绍如下：&lt;/p>
&lt;p>整数类型：&lt;code>BIT、BOOL、TINY INT、SMALL INT、MEDIUM INT、 INT、 BIG INT&lt;/code>&lt;/p>
&lt;p>浮点数类型：&lt;code>FLOAT、DOUBLE、DECIMAL&lt;/code>&lt;/p>
&lt;p>字符串类型：&lt;code>CHAR、VARCHAR、TINY TEXT、TEXT、MEDIUM TEXT、LONGTEXT、TINY BLOB、BLOB、MEDIUM BLOB、LONG BLOB&lt;/code>&lt;/p>
&lt;p>日期类型：&lt;code>Date、DateTime、TimeStamp、Time、Year&lt;/code>&lt;/p>
&lt;p>其他数据类型：&lt;code>BINARY、VARBINARY、ENUM、SET&lt;/code>&amp;hellip;&lt;/p></description></item><item><title>PostgreSQL 安装与配置</title><link>https://wnanbei.github.io/post/postgresql-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/postgresql-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid><description/></item><item><title>PostgreSQL 数据库与表</title><link>https://wnanbei.github.io/post/postgresql-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E8%A1%A8/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/postgresql-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E8%A1%A8/</guid><description/></item></channel></rss>