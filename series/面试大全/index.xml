<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>面试大全 on WNANBEI</title><link>https://wnanbei.github.io/series/%E9%9D%A2%E8%AF%95%E5%A4%A7%E5%85%A8/</link><description>Recent content in 面试大全 on WNANBEI</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 10 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wnanbei.github.io/series/%E9%9D%A2%E8%AF%95%E5%A4%A7%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB 索引用法与原理</title><link>https://wnanbei.github.io/post/mongodb-%E7%B4%A2%E5%BC%95%E7%94%A8%E6%B3%95%E4%B8%8E%E5%8E%9F%E7%90%86/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mongodb-%E7%B4%A2%E5%BC%95%E7%94%A8%E6%B3%95%E4%B8%8E%E5%8E%9F%E7%90%86/</guid><description>&lt;p>从 MongoDB 3.2 开始，WiredTiger 成为 MongoDB 的默认存储引擎，WiredTiger 引擎使用 B+ 树作为索引的数据结构。&lt;/p></description></item><item><title>Redis 底层数据结构</title><link>https://wnanbei.github.io/post/redis-%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>&lt;p>Redis 底层所采用的数据结构，分别有：SDS String、HashTable、ZipList、QuickList、IntSet、SkipList。&lt;/p></description></item><item><title>Redis 缓存与淘汰策略</title><link>https://wnanbei.github.io/post/redis-%E7%BC%93%E5%AD%98%E4%B8%8E%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E7%BC%93%E5%AD%98%E4%B8%8E%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5/</guid><description>&lt;p>常见的缓存类型以及现实中常遇到的缓存问题，Redis 所采用的过期淘汰策略 LRU、LFU 等。&lt;/p></description></item><item><title>Redis 数据持久化策略</title><link>https://wnanbei.github.io/post/redis-%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E7%AD%96%E7%95%A5/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E7%AD%96%E7%95%A5/</guid><description>&lt;p>redis 提供了两种持久化的方式，分别是 &lt;code>RDB(Redis DataBase)&lt;/code> 和 &lt;code>AOF(Append Only File)&lt;/code>。&lt;/p></description></item><item><title>Redis 整体架构</title><link>https://wnanbei.github.io/post/redis-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/redis-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</guid><description>&lt;p>Redis 的性能、整体架构设计、单线程原因等。&lt;/p></description></item><item><title>MySQL 中的锁</title><link>https://wnanbei.github.io/post/mysql-%E4%B8%AD%E7%9A%84%E9%94%81/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E4%B8%AD%E7%9A%84%E9%94%81/</guid><description>&lt;p>根据加锁的范围，MySQL 的锁大致可以分成三类：&lt;/p>
&lt;ol>
&lt;li>全局锁&lt;/li>
&lt;li>表锁&lt;/li>
&lt;li>行锁&lt;/li>
&lt;/ol></description></item><item><title>MySQL 索引详解</title><link>https://wnanbei.github.io/post/mysql-%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://wnanbei.github.io/post/mysql-%E7%B4%A2%E5%BC%95%E8%AF%A6%E8%A7%A3/</guid><description>&lt;p>索引的出现其实就是为了提高数据查询的效率，就像书的目录一样。&lt;/p></description></item><item><title>Kubernetes 对象</title><link>https://wnanbei.github.io/post/kubernetes-%E5%AF%B9%E8%B1%A1/</link><pubDate>Wed, 06 Jan 2021 16:17:25 +0000</pubDate><guid>https://wnanbei.github.io/post/kubernetes-%E5%AF%B9%E8%B1%A1/</guid><description>&lt;p>Kubernetes 对象指的是 Kubernetes 系统的持久化实体，所有这些对象合起来，代表了集群的实际情况。&lt;/p>
&lt;p>常规的应用里，把应用程序的数据存储在数据库中，Kubernetes 将其数据以对象的形式通过 &lt;code>apiserver&lt;/code> 存储在 &lt;code>etcd&lt;/code> 中。&lt;/p></description></item><item><title>Kubernetes 架构</title><link>https://wnanbei.github.io/post/kubernetes-%E6%9E%B6%E6%9E%84/</link><pubDate>Wed, 06 Jan 2021 16:17:25 +0000</pubDate><guid>https://wnanbei.github.io/post/kubernetes-%E6%9E%B6%E6%9E%84/</guid><description>&lt;p>以下是 k8s 官方的架构图：&lt;/p>
&lt;p>&lt;figure
>
&lt;a href="https://wnanbei.github.io/images/k8s/components-of-kubernetes.png" >
&lt;img src="https://wnanbei.github.io/images/k8s/components-of-kubernetes.png"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p></description></item><item><title>HTTP网络协议</title><link>https://wnanbei.github.io/post/http%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</link><pubDate>Sat, 06 Jan 2018 16:17:25 +0000</pubDate><guid>https://wnanbei.github.io/post/http%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</guid><description>&lt;p>&lt;code>HTTP（HyperText Transfer Protocol）&lt;/code>，意为超文本传输协议，是目前互联网上应用最为广泛的一种网络协议。目前使用最普遍的一个版本是HTTP 1.1。&lt;/p></description></item><item><title>TCP/IP传输层网络协议</title><link>https://wnanbei.github.io/post/tcp/ip%E4%BC%A0%E8%BE%93%E5%B1%82%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</link><pubDate>Sat, 06 Jan 2018 16:17:25 +0000</pubDate><guid>https://wnanbei.github.io/post/tcp/ip%E4%BC%A0%E8%BE%93%E5%B1%82%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</guid><description>&lt;p>&lt;strong>其实网络协议，就是为了所有的计算机能够在同一个网络中互相传递数据，而制定的数据传输规则。&lt;/strong> 就好像我们只有说同一种语言才能互相交流一个道理，那么想要在互联网中传递数据，就得遵守标准的网络协议。&lt;/p></description></item></channel></rss>